@using Microsoft.AspNetCore.Identity
@using collector_forum.Data.Models
@model collector_forum.Models.Post.PostIndexModel

@inject SignInManager<ApplicationUser> signInManager
@inject UserManager<ApplicationUser> userManager
@{
    ViewData["Title"] = Model.Title;
}

<div class="container body-content">
    <div class="row postHeader">
        <div class="postHeading">
            <span class="postIndexTitle">
                @Model.Title
            </span>
            <span id="headingBtn">
                <a asp-controller="Forum" asp-action="Topic" asp-route-id="@Model.CategoryId" class="btn btn-back">
                    Back to @Model.CategoryName
                </a>
            </span>
        </div>
    </div>

    <div class="row" id="postIndexContent">
        <div class="col-md-3 postAuthorContainer">
            <a class="userName" asp-controller="Profile" asp-action="Detail" asp-route-id="@Model.AuthorId">
                @Model.AuthorName
            </a>
            @if (Model.IsAuthorAdmin && Model.IsAuthorMod)
            {
                <span class="isAdmin smaller">Admin</span>
            }
            else if (Model.IsAuthorMod)
            {
                <span class="isMod smaller">Mod</span>
            }
            <br />
            <span class="postDate">@Model.Created</span>

        </div>
        <div class="col-md-9 postContentContainer">
            <div class="postContent">
                @Html.Raw(Model.PostContent)
            </div>
        </div>
    </div>
    <div class="row" id="replyDivider"></div>
    <div class="row" id="postReplyRow">
        @if (User.Identity.IsAuthenticated)
        {

            <span class="col">
                <a asp-controller="Reply" asp-action="Create" asp-route-id="@Model.Id" class="btn btn-newReply">
                    Post Reply
                </a>
            </span>

        }
        @if (Model.AuthorName.Contains(User.Identity.Name))
        {
            <span class="col-auto">
                <a asp-controller="Post" asp-action="Edit" asp-route-postId="@Model.Id" class="btn btn-editPost">
                    Edit Post
                </a>
            </span>
            <form asp-action="Delete" asp-controller="Post" asp-route-postId="@Model.Id" method="post">
                <button type="submit" class="btn btn-danger"
                        onclick="return confirm('Are you sure you want to delete post: @Model.Title')">
                    Delete
                </button>
            </form>
        }
    </div>

    @if (Model.Replies.Any())
    {
        foreach (var reply in Model.Replies)
        {
            <div class="row replyContent">
                <div class="col-md-3 replyAuthorContainer">
                    <a class="userName" asp-controller="Profile" asp-action="Detail" asp-route-id="@reply.AuthorId">
                        @reply.AuthorName
                    </a>
                    @if (reply.IsAuthorAdmin)
                    {
                        <div class="isAdmin smaller">Admin</div>
                    }
                    @if (reply.IsAuthorMod)
                    {
                        <div class="isMod smaller">Mod</div>
                    }
                    <br />
                    <span class="postDate">@reply.Date</span>
                </div>
                <div class="col-md-9 replyContentContainer">
                    <div class="postContent">
                        @Html.Raw(reply.ReplyContent)
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="noPosts">
            <h3>
                There are no replies to this post. <br />
            </h3>
        </div>
    }
</div>
